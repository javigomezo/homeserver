#- name: Make sure the container is created and running - {{ container_name }}
#  community.docker.docker_container:
#    state: started # may be absent or started
#    name: "{{ container_name }}"
#    image: "{{ linuxserver_registry }}/{{ container_name }}:{{ image_tag }}"
#    pull: true
#    networks:
#      - name: "{{ main_network }}"
#    purge_networks: true
#    privileged: false
#    security_opts: no-new-privileges:true
#    restart_policy: unless-stopped
#    env:
#      "PUID": "{{ guid }}"
#      "PGID": "{{ guid }}"
#      "UMASK": "{{ umask }}"
#      "TZ": "{{ timezone }}"
#      "SERVERURL": "{{ wireguard_url }}"
#      "SERVERPORT": "{{ wireguard_port }}"
#      "PEERS": "{{ wireguard_peers }}"
#      "PEERDNS": "{{ peer_dns }}"
#      "ALLOWEDIPS": "{{ wireguard_allowed_ips }}"
#      "INTERNAL_SUBNET": "{{ wireguard_internal_subnet }}"
#    dns_servers:
#      - "{{ wireguard_dns }}"
#    capabilities:
#      - NET_ADMIN
#      - SYS_MODULE
#    sysctls:
#      net.ipv4.conf.all.src_valid_mark: 1
#    volumes:
#      - "{{ docker_dir }}/{{ container_name }}/config:/config"
#      - "/lib/modules:/lib/modules"
#      - "/etc/localtime:/etc/localtime:ro"
#    labels:
#      "traefik.enable": "true"
#      ## UDP Routers
#      "traefik.udp.routers.wireguard-rtr.entrypoints": "wireguard"
#      ## UDP Services
#      "traefik.udp.routers.wireguard-rtr.service": "wireguard-svc"
#      "traefik.udp.services.wireguard-svc.loadbalancer.server.port": "{{ wireguard_port }}"

- name: Make sure the container is created and running - {{ container_name }}
  community.docker.docker_container:
    state: started # may be absent or started
    name: "{{ container_name }}"
    image: "weejewel/{{ container_name }}:{{ image_tag }}"
    pull: true
    networks:
      - name: "{{ main_network }}"
    purge_networks: true
    privileged: false
    security_opts: no-new-privileges:true
    restart_policy: unless-stopped
    env:
      "PUID": "{{ guid }}"
      "PGID": "{{ guid }}"
      "UMASK": "{{ umask }}"
      "TZ": "{{ timezone }}"
      "WG_HOST": "{{ wireguard_url }}"
      "PASSWORD": "{{ wireguard_password }}"
      "WG_PORT": "{{ wireguard_port }}"
      "WG_DEFAULT_DNS": "{{ wireguard_dns }}"
      #"PEERS": "{{ wireguard_peers }}"
      #"PEERDNS": "{{ peer_dns }}"
      "WG_ALLOWED_IPS": "{{ wireguard_allowed_ips }}"
      #"INTERNAL_SUBNET": "{{ wireguard_internal_subnet }}"
    dns_servers:
      - "{{ wireguard_dns }}"
    capabilities:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      net.ipv4.conf.all.src_valid_mark: 1
      net.ipv4.ip_forward: 1
    volumes:
      - "{{ docker_dir }}/{{ container_name }}/config:/etc/wireguard"
      - "/lib/modules:/lib/modules"
      - "/etc/localtime:/etc/localtime:ro"
    labels:
      "traefik.enable": "true"
      ## UDP Routers
      "traefik.udp.routers.wireguard-rtr.entrypoints": "wireguard"
      ## UDP Services
      "traefik.udp.routers.wireguard-rtr.service": "wireguard-svc"
      "traefik.udp.services.wireguard-svc.loadbalancer.server.port": "{{ wireguard_port }}"
      ## HTTP Routers
      "traefik.http.routers.wireguard-rtr.entrypoints": "web, websecure"
      "traefik.http.routers.wireguard-rtr.rule": "Host(`{{ container_name }}.{{ fqdn }}`)"
      ## Middlewares
      "traefik.http.routers.wireguard-rtr.middlewares": "{{ 'chain-oauth@file' if oauth == true else 'chain-no-oauth@file' }}"
      ## HTTP Services
      "traefik.http.routers.wireguard-rtr.service": "wireguard-svc"
      "traefik.http.services.wireguard-svc.loadbalancer.server.port": "51821"
